version: '3.5'

services:
  bot:
    image: "${BOT_IMAGE_NAME}"
    container_name: "${BOT_CONTAINER_NAME}"
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME}"
    volumes:
    - .:/usr/src/app/${BOT_NAME}
    command: python3 -m bot
    depends_on:
      - pg_database
    env_file:
      - ".env"
    networks:
      - botnet
    restart: unless-stopped

  pg_database:
    container_name: postgres_${BOT_NAME}
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - /var/lib/invest_db/${BOT_NAME}/data:/var/lib/postgresql/data
    command: "postgres -c max_connections=150
              -c shared_buffers=512MB -c effective_cache_size=1536MB
              -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
              -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
              -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
              -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"

    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - botnet

networks:
  botnet:
   driver: bridge


